Question-1:
Shakib Al Hasan is building his tip calculator for whenever he goes eating 
in a restaurant. In Bangladesh, it's usual to tip 15% if the bill value is 
between 50 and 300. In other countries, it is 20% if the bill value is 
between 50 and 300.
Write a Python program that takes a string as input consisting of several 
restaurant bills (comma separated) between the mentioned range and 
calculates each total bill updated by adding with the tip value in a 
separate list. Then print the new list. Note that the first element of the 
input should be the location. Finally, print the total tip separately.
-----------------------------------------------------
Sample Input 1:
Bangladesh, 200, 45, 250, 170, 90

Sample Output 1:
[230.0, 45, 287.5, 195.5, 103.5]
Total tip: 106.5
Explanation1:
Since the location is Bangladesh, then the tip would be 15% between 50 and 
300. If you apply the given conditions in your code, you will be able to 
generate the output list (total bill with tip). And, the total amount of 
tip is 30 + 0 + 37.5 + 25.5 + 13.5 = 106.5
-----------------------------------------------------
Sample Input 2:
USA, 20, 150, 80, 33

Sample Output 2:
[20, 180.0, 96.0, 33]
Total tip: 46
Explanation2:
Since the location is not Bangladesh, then the tip would be 20% between 50 
and 300. If you apply the given conditions in your code, you will be able 
to generate the output list (total bill with tip). And, the total amount of 
tip is 0 + 30 + 16 + 0 = 46


Question-2:
Here, each odd and even keys of the dictionary carry a tuple of names and a 
tuple of numbers respectively.
Your task is to write a python program to generate the following output 
dictionary below so that the names (keys of the output dictionary) are 
sorted in descending order based on the sum of their ASCII values and the 
numbers corresponding to each name (values of the output dictionary) are 
generated by summing the ASCII values of the key with a single number from 
the sorted number list generated from the numbers available in the tuples 
of the input dictionary.
================================================
GIVEN dictionary1:
dict1={1: ("Leo", "Kim", "Joe", "Brad"), 2:(12, 15, 10, 14), 3: 
("Joey", "Tim", "Jen", "Jack"), 4:(19, 13, 17, 11)}

Sample Output 1:
{'Joey': 417, 'Brad': 388, 'Jack': 389, 'Tim': 311, 'Kim': 303, 'Leo': 
303, 'Joe': 303, 'Jen': 304}

Explanation1:
In the output dictionary, for example, the ASCII value sum of Joey is 407, 
which is larger than the rest of the names and that’s why it is at the 
beginning of the dictionary.

Now, the sorted list of the numbers available in the tuples of the input 
dictionary is:
[10, 11, 12, 13, 14, 15, 17, 19]
So, the final value of Joey is = 407+10=417
For, Brad, the sum of the ASCII value is= 377
So, the final value of Brad is= 377+11=388
The rest of the dictionary is made following this pattern.
================================================
GIVEN dictionary2:
dict1= {1:("Brad","Liam","Corey"), 2:(15,25,100), 3:("Tom","Jessy"), 
4:(21,33)}

Sample Output2:
{'Jessy': 541, 'Corey': 535, 'Liam': 412, 'Brad': 410, 'Tom': 404}

Explanation2:
In the output dictionary, for example, the ASCII value sum of Jessy is 526, 
which is  larger than the rest of the names and that’s why it is at the 
beginning of the dictionary.

Now, the sorted list of the numbers available in the tuples of the input 
dictionary is:
[15, 21, 25, 33, 100]
So, the final value of Jessy is = 526+15=541
For, Corey, the sum of the ASCII value is= 514
So, the final value of Corey is= 514+21=535
The rest of the dictionary is made following this pattern.


Question-3:
Write a Python function  named calc_mark() that takes a student’s 
individual quiz marks out of 10 in a string separated by a comma & multiple 
spaces. The function then calculates & returns his/her final quiz mark. You 
can assume the minimum number of quizzes taken is 2. Let’s say, there were 
a total n number of quizzes taken. The final quiz mark will be calculated 
as follows:
If n equals or less than 3, then final_mark = average mark of best (n-1) 
quizzes
Otherwise,  final_mark = average mark of best (n-2) quizzes
[You are not allowed to use built-in functions sum(), max(), min() to solve 
this problem.]

================================================
Function Call 1:
calc_mark("7 ,       9 ,   6 ,   8 ,   7")

Sample Output 1:
Given marks: [7, 9, 6, 8, 7]
8.0

Explanation 1: Since the total number of quizzes is greater than 3, the 
final mark will be: (9 + 8 + 7) / 3 = 8.0 which will be returned and 
printed in the function call.

================================================
Function Call 2:
calc_mark("10 ,    6 ,          8")

Sample Output 2:
Given marks: [10, 6, 8]
9.0

Explanation 2: In this case, the final mark will be: (10 + 8) / 2 = 9.0 
which will be returned and printed in the function call.